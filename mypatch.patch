<<<<<<< HEAD
diff --git a/bin/.gitignore b/bin/.gitignore
new file mode 100644
index 0000000..a2a3040
--- /dev/null
+++ b/bin/.gitignore
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
diff --git a/bin/.mvn/wrapper/MavenWrapperDownloader.class b/bin/.mvn/wrapper/MavenWrapperDownloader.class
new file mode 100644
index 0000000..17490b3
Binary files /dev/null and b/bin/.mvn/wrapper/MavenWrapperDownloader.class differ
diff --git a/bin/.mvn/wrapper/maven-wrapper.jar b/bin/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000..2cc7d4a
Binary files /dev/null and b/bin/.mvn/wrapper/maven-wrapper.jar differ
diff --git a/bin/.mvn/wrapper/maven-wrapper.properties b/bin/.mvn/wrapper/maven-wrapper.properties
new file mode 100644
index 0000000..642d572
--- /dev/null
+++ b/bin/.mvn/wrapper/maven-wrapper.properties
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar
diff --git a/bin/mvnw b/bin/mvnw
new file mode 100644
index 0000000..a16b543
--- /dev/null
+++ b/bin/mvnw
@@ -0,0 +1,310 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    if [ -n "$MVNW_REPOURL" ]; then
+      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+    else
+      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+    fi
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+    if $cygwin; then
+      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
+    fi
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget "$jarUrl" -O "$wrapperJarPath"
+        else
+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl -o "$wrapperJarPath" "$jarUrl" -f
+        else
+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+        fi
+
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaClass=`cygpath --path --windows "$javaClass"`
+        fi
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
diff --git a/bin/mvnw.cmd b/bin/mvnw.cmd
new file mode 100644
index 0000000..c8d4337
--- /dev/null
+++ b/bin/mvnw.cmd
@@ -0,0 +1,182 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+
+FOR /F "tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET DOWNLOAD_URL="%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %DOWNLOAD_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
diff --git a/bin/pom.xml b/bin/pom.xml
new file mode 100644
index 0000000..31f8707
--- /dev/null
+++ b/bin/pom.xml
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<groupId>org.springframework.boot</groupId>
+		<artifactId>spring-boot-starter-parent</artifactId>
+		<version>2.2.1.RELEASE</version>
+		<relativePath /> <!-- lookup parent from repository -->
+	</parent>
+	<groupId>tn.esprit.spring</groupId>
+	<artifactId>timesheet</artifactId>
+	<version>1.0</version>
+	<name>timesheet</name>
+	<description>timesheet</description>
+
+	<properties>
+		<java.version>1.8</java.version>
+		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
+	</properties>
+
+	<dependencies>
+
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-devtools</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-data-jpa</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-web</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-validation</artifactId>
+		</dependency>
+
+		<dependency>
+			<groupId>mysql</groupId>
+			<artifactId>mysql-connector-java</artifactId>
+			<scope>runtime</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-test</artifactId>
+			<scope>test</scope>
+			<exclusions>
+				<exclusion>
+					<groupId>org.junit.vintage</groupId>
+					<artifactId>junit-vintage-engine</artifactId>
+				</exclusion>
+			</exclusions>
+		</dependency>
+
+		<!-- JSF -->
+		<dependency>
+			<groupId>org.apache.myfaces.core</groupId>
+			<artifactId>myfaces-impl</artifactId>
+			<version>2.2.12</version>
+		</dependency>
+		<dependency>
+			<groupId>org.apache.myfaces.core</groupId>
+			<artifactId>myfaces-api</artifactId>
+			<version>2.2.12</version>
+		</dependency>
+		<dependency>
+			<groupId>org.apache.tomcat.embed</groupId>
+			<artifactId>tomcat-embed-jasper</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.ocpsoft.rewrite</groupId>
+			<artifactId>rewrite-servlet</artifactId>
+			<version>3.4.1.Final</version>
+		</dependency>
+		<dependency>
+			<groupId>org.ocpsoft.rewrite</groupId>
+			<artifactId>rewrite-integration-faces</artifactId>
+			<version>3.4.1.Final</version>
+		</dependency>
+		<dependency>
+			<groupId>org.ocpsoft.rewrite</groupId>
+			<artifactId>rewrite-config-prettyfaces</artifactId>
+			<version>3.4.1.Final</version>
+		</dependency>
+		<dependency>
+			<groupId>org.primefaces</groupId>
+			<artifactId>primefaces</artifactId>
+			<version>6.1</version>
+		</dependency>
+		<dependency>
+			<groupId>org.projectlombok</groupId>
+			<artifactId>lombok</artifactId>
+			<version>1.16.16</version>
+		</dependency>
+		<!-- JSF -->
+
+	</dependencies>
+
+
+
+	<build>
+		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
+		<plugins>
+			<plugin>
+				<groupId>org.springframework.boot</groupId>
+				<artifactId>spring-boot-maven-plugin</artifactId>
+			</plugin>
+		</plugins>
+	</build>
+
+</project>
diff --git a/bin/src/main/java/tn/esprit/spring/TimesheetApplication.class b/bin/src/main/java/tn/esprit/spring/TimesheetApplication.class
new file mode 100644
index 0000000..c32eaa2
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/TimesheetApplication.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/config/LoginFilter.class b/bin/src/main/java/tn/esprit/spring/config/LoginFilter.class
new file mode 100644
index 0000000..a937204
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/config/LoginFilter.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/controller/ControllerEmployeImpl.class b/bin/src/main/java/tn/esprit/spring/controller/ControllerEmployeImpl.class
new file mode 100644
index 0000000..37d4431
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/ControllerEmployeImpl.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/controller/ControllerEntrepriseImpl.class b/bin/src/main/java/tn/esprit/spring/controller/ControllerEntrepriseImpl.class
new file mode 100644
index 0000000..bd098e5
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/ControllerEntrepriseImpl.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/controller/ControllerTimesheetImpl.class b/bin/src/main/java/tn/esprit/spring/controller/ControllerTimesheetImpl.class
new file mode 100644
index 0000000..c49c3c4
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/ControllerTimesheetImpl.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/controller/RestControlEmploye.class b/bin/src/main/java/tn/esprit/spring/controller/RestControlEmploye.class
new file mode 100644
index 0000000..ae7a8ea
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/RestControlEmploye.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/controller/RestControlEntreprise.class b/bin/src/main/java/tn/esprit/spring/controller/RestControlEntreprise.class
new file mode 100644
index 0000000..fc7c887
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/RestControlEntreprise.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/controller/RestControlTimesheet.class b/bin/src/main/java/tn/esprit/spring/controller/RestControlTimesheet.class
new file mode 100644
index 0000000..7096690
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/RestControlTimesheet.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/entities/Contrat.class b/bin/src/main/java/tn/esprit/spring/entities/Contrat.class
new file mode 100644
index 0000000..6b6f51a
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Contrat.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/entities/Departement.class b/bin/src/main/java/tn/esprit/spring/entities/Departement.class
new file mode 100644
index 0000000..ea4885d
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Departement.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/entities/Employe.class b/bin/src/main/java/tn/esprit/spring/entities/Employe.class
new file mode 100644
index 0000000..a84be74
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Employe.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/entities/Entreprise.class b/bin/src/main/java/tn/esprit/spring/entities/Entreprise.class
new file mode 100644
index 0000000..102869c
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Entreprise.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/entities/Mission.class b/bin/src/main/java/tn/esprit/spring/entities/Mission.class
new file mode 100644
index 0000000..ef4c6b2
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Mission.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/entities/MissionExterne.class b/bin/src/main/java/tn/esprit/spring/entities/MissionExterne.class
new file mode 100644
index 0000000..00f200b
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/MissionExterne.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/entities/Role.class b/bin/src/main/java/tn/esprit/spring/entities/Role.class
new file mode 100644
index 0000000..d8985d4
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Role.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/entities/Timesheet.class b/bin/src/main/java/tn/esprit/spring/entities/Timesheet.class
new file mode 100644
index 0000000..34a29f1
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Timesheet.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/entities/TimesheetPK.class b/bin/src/main/java/tn/esprit/spring/entities/TimesheetPK.class
new file mode 100644
index 0000000..6952891
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/TimesheetPK.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/repository/ContratRepository.class b/bin/src/main/java/tn/esprit/spring/repository/ContratRepository.class
new file mode 100644
index 0000000..f4d576b
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/ContratRepository.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/repository/DepartementRepository.class b/bin/src/main/java/tn/esprit/spring/repository/DepartementRepository.class
new file mode 100644
index 0000000..a724203
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/DepartementRepository.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/repository/EmployeRepository.class b/bin/src/main/java/tn/esprit/spring/repository/EmployeRepository.class
new file mode 100644
index 0000000..f33ea0d
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/EmployeRepository.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/repository/EntrepriseRepository.class b/bin/src/main/java/tn/esprit/spring/repository/EntrepriseRepository.class
new file mode 100644
index 0000000..3c466a9
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/EntrepriseRepository.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/repository/MissionRepository.class b/bin/src/main/java/tn/esprit/spring/repository/MissionRepository.class
new file mode 100644
index 0000000..27ebfd1
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/MissionRepository.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/repository/TimesheetRepository.class b/bin/src/main/java/tn/esprit/spring/repository/TimesheetRepository.class
new file mode 100644
index 0000000..71ae808
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/TimesheetRepository.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/ContratServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/ContratServiceImpl.class
new file mode 100644
index 0000000..a3ca20d
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/ContratServiceImpl.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/DepartementServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/DepartementServiceImpl.class
new file mode 100644
index 0000000..6568834
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/DepartementServiceImpl.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.class
new file mode 100644
index 0000000..0cad30a
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/EntrepriseServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/EntrepriseServiceImpl.class
new file mode 100644
index 0000000..706a550
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/EntrepriseServiceImpl.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/IContratService.class b/bin/src/main/java/tn/esprit/spring/services/IContratService.class
new file mode 100644
index 0000000..a88bbc2
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/IContratService.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/IDepartementService.class b/bin/src/main/java/tn/esprit/spring/services/IDepartementService.class
new file mode 100644
index 0000000..78d4571
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/IDepartementService.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/IEmployeService.class b/bin/src/main/java/tn/esprit/spring/services/IEmployeService.class
new file mode 100644
index 0000000..8cbefcb
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/IEmployeService.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/IEntrepriseService.class b/bin/src/main/java/tn/esprit/spring/services/IEntrepriseService.class
new file mode 100644
index 0000000..c121335
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/IEntrepriseService.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/ITimesheetService.class b/bin/src/main/java/tn/esprit/spring/services/ITimesheetService.class
new file mode 100644
index 0000000..7cc6976
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/ITimesheetService.class differ
diff --git a/bin/src/main/java/tn/esprit/spring/services/TimesheetServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/TimesheetServiceImpl.class
new file mode 100644
index 0000000..5524e6f
Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/TimesheetServiceImpl.class differ
diff --git a/bin/src/main/resources/application.properties b/bin/src/main/resources/application.properties
new file mode 100644
index 0000000..0ddd527
--- /dev/null
+++ b/bin/src/main/resources/application.properties
@@ -0,0 +1,29 @@
+
+#http://localhost:8081/SpringMVC/servlet/sayHello?myName=Walid
+
+#Web configuration
+spring.mvc.view.prefix=/views/
+spring.mvc.view.suffix=.jsp
+
+#Server configuration
+server.servlet.context-path=/SpringMVC
+spring.mvc.servlet.path=/servlet
+ 
+server.port=8081
+
+### DATABASE ###
+#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/timesheet-spring?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
+spring.datasource.username=root
+spring.datasource.password=
+### JPA / HIBERNATE ###
+spring.jpa.show-sql=true
+spring.jpa.hibernate.ddl-auto=update
+spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
+
+#logging configuration
+logging.level.com.zaxxer.hikari=warn
+logging.level.org.springframework=warn 
+logging.level.root=INFO
+logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %-5level - %logger{60} - %msg%n
+
diff --git a/bin/src/main/resources/log4j.xml b/bin/src/main/resources/log4j.xml
new file mode 100644
index 0000000..e049923
--- /dev/null
+++ b/bin/src/main/resources/log4j.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
+
+<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
+
+<appender name="console" class="org.apache.log4j.ConsoleAppender">
+
+<layout class="org.apache.log4j.PatternLayout"> <param name="ConversionPattern" value="%d{yyyy-
+MM-dd HH:mm:ss} %l:%L - %m%n" /> </layout>
+
+</appender>
+
+<appender name="file" class="org.apache.log4j.RollingFileAppender">
+<param name="append" value="true" /> <param name="maxFileSize" value="10MB" />
+<param name="maxBackupIndex" value="10" /> <param name="file" value="C:/logs/formation.log"
+/>
+
+<layout class="org.apache.log4j.PatternLayout"> <param name="ConversionPattern" value="%d{yyyy-
+MM-dd HH:mm:ss} %l:%L - %m%n" /></layout>
+
+</appender>
+
+<root> <level value="DEBUG" /> <appender-ref ref="console" /> <appender-ref ref="file" /> </root>
+
+</log4j:configuration>
\ No newline at end of file
diff --git a/bin/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF b/bin/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
new file mode 100644
index 0000000..3bcde68
--- /dev/null
+++ b/bin/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
@@ -0,0 +1,10 @@
+Manifest-Version: 1.0
+Implementation-Title: timesheet
+Implementation-Version: 1.0
+Built-By: WIEM
+Implementation-Vendor-Id: tn.esprit.spring
+Build-Jdk: 1.8.0_201
+Implementation-URL: https://projects.spring.io/spring-boot/#/spring-bo
+ ot-starter-parent/timesheet
+Created-By: Maven Integration for Eclipse
+
diff --git a/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties b/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
new file mode 100644
index 0000000..08c9469
--- /dev/null
+++ b/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
@@ -0,0 +1,7 @@
+#Generated by Maven Integration for Eclipse
+#Sat Oct 17 18:42:22 WAT 2020
+version=1.0
+groupId=tn.esprit.spring
+m2e.projectName=Projet_IC
+m2e.projectLocation=C\:\\Users\\21698\\Documents\\workspace-sts-3.8.4.RELEASE\\Projet_IC
+artifactId=timesheet
diff --git a/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.xml b/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.xml
new file mode 100644
index 0000000..31f8707
--- /dev/null
+++ b/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.xml
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<groupId>org.springframework.boot</groupId>
+		<artifactId>spring-boot-starter-parent</artifactId>
+		<version>2.2.1.RELEASE</version>
+		<relativePath /> <!-- lookup parent from repository -->
+	</parent>
+	<groupId>tn.esprit.spring</groupId>
+	<artifactId>timesheet</artifactId>
+	<version>1.0</version>
+	<name>timesheet</name>
+	<description>timesheet</description>
+
+	<properties>
+		<java.version>1.8</java.version>
+		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
+	</properties>
+
+	<dependencies>
+
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-devtools</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-data-jpa</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-web</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-validation</artifactId>
+		</dependency>
+
+		<dependency>
+			<groupId>mysql</groupId>
+			<artifactId>mysql-connector-java</artifactId>
+			<scope>runtime</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-test</artifactId>
+			<scope>test</scope>
+			<exclusions>
+				<exclusion>
+					<groupId>org.junit.vintage</groupId>
+					<artifactId>junit-vintage-engine</artifactId>
+				</exclusion>
+			</exclusions>
+		</dependency>
+
+		<!-- JSF -->
+		<dependency>
+			<groupId>org.apache.myfaces.core</groupId>
+			<artifactId>myfaces-impl</artifactId>
+			<version>2.2.12</version>
+		</dependency>
+		<dependency>
+			<groupId>org.apache.myfaces.core</groupId>
+			<artifactId>myfaces-api</artifactId>
+			<version>2.2.12</version>
+		</dependency>
+		<dependency>
+			<groupId>org.apache.tomcat.embed</groupId>
+			<artifactId>tomcat-embed-jasper</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.ocpsoft.rewrite</groupId>
+			<artifactId>rewrite-servlet</artifactId>
+			<version>3.4.1.Final</version>
+		</dependency>
+		<dependency>
+			<groupId>org.ocpsoft.rewrite</groupId>
+			<artifactId>rewrite-integration-faces</artifactId>
+			<version>3.4.1.Final</version>
+		</dependency>
+		<dependency>
+			<groupId>org.ocpsoft.rewrite</groupId>
+			<artifactId>rewrite-config-prettyfaces</artifactId>
+			<version>3.4.1.Final</version>
+		</dependency>
+		<dependency>
+			<groupId>org.primefaces</groupId>
+			<artifactId>primefaces</artifactId>
+			<version>6.1</version>
+		</dependency>
+		<dependency>
+			<groupId>org.projectlombok</groupId>
+			<artifactId>lombok</artifactId>
+			<version>1.16.16</version>
+		</dependency>
+		<!-- JSF -->
+
+	</dependencies>
+
+
+
+	<build>
+		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
+		<plugins>
+			<plugin>
+				<groupId>org.springframework.boot</groupId>
+				<artifactId>spring-boot-maven-plugin</artifactId>
+			</plugin>
+		</plugins>
+	</build>
+
+</project>
diff --git a/bin/src/main/webapp/WEB-INF/classes/application.properties b/bin/src/main/webapp/WEB-INF/classes/application.properties
new file mode 100644
index 0000000..0ddd527
--- /dev/null
+++ b/bin/src/main/webapp/WEB-INF/classes/application.properties
@@ -0,0 +1,29 @@
+
+#http://localhost:8081/SpringMVC/servlet/sayHello?myName=Walid
+
+#Web configuration
+spring.mvc.view.prefix=/views/
+spring.mvc.view.suffix=.jsp
+
+#Server configuration
+server.servlet.context-path=/SpringMVC
+spring.mvc.servlet.path=/servlet
+ 
+server.port=8081
+
+### DATABASE ###
+#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/timesheet-spring?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
+spring.datasource.username=root
+spring.datasource.password=
+### JPA / HIBERNATE ###
+spring.jpa.show-sql=true
+spring.jpa.hibernate.ddl-auto=update
+spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
+
+#logging configuration
+logging.level.com.zaxxer.hikari=warn
+logging.level.org.springframework=warn 
+logging.level.root=INFO
+logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %-5level - %logger{60} - %msg%n
+
diff --git a/bin/src/main/webapp/WEB-INF/classes/log4j.xml b/bin/src/main/webapp/WEB-INF/classes/log4j.xml
new file mode 100644
index 0000000..e049923
--- /dev/null
+++ b/bin/src/main/webapp/WEB-INF/classes/log4j.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
+
+<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
+
+<appender name="console" class="org.apache.log4j.ConsoleAppender">
+
+<layout class="org.apache.log4j.PatternLayout"> <param name="ConversionPattern" value="%d{yyyy-
+MM-dd HH:mm:ss} %l:%L - %m%n" /> </layout>
+
+</appender>
+
+<appender name="file" class="org.apache.log4j.RollingFileAppender">
+<param name="append" value="true" /> <param name="maxFileSize" value="10MB" />
+<param name="maxBackupIndex" value="10" /> <param name="file" value="C:/logs/formation.log"
+/>
+
+<layout class="org.apache.log4j.PatternLayout"> <param name="ConversionPattern" value="%d{yyyy-
+MM-dd HH:mm:ss} %l:%L - %m%n" /></layout>
+
+</appender>
+
+<root> <level value="DEBUG" /> <appender-ref ref="console" /> <appender-ref ref="file" /> </root>
+
+</log4j:configuration>
\ No newline at end of file
diff --git a/bin/src/main/webapp/WEB-INF/faces-config.xml b/bin/src/main/webapp/WEB-INF/faces-config.xml
new file mode 100644
index 0000000..c482674
--- /dev/null
+++ b/bin/src/main/webapp/WEB-INF/faces-config.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<faces-config xmlns="http://xmlns.jcp.org/xml/ns/javaee"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-facesconfig_2_2.xsd"
+	version="2.2">
+
+	<application>
+		<el-resolver>org.springframework.web.jsf.el.SpringBeanFacesELResolver</el-resolver>
+	</application>
+
+</faces-config>
\ No newline at end of file
diff --git a/bin/src/main/webapp/WEB-INF/web.xml b/bin/src/main/webapp/WEB-INF/web.xml
new file mode 100644
index 0000000..2f83d9a
--- /dev/null
+++ b/bin/src/main/webapp/WEB-INF/web.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" version="3.1">
+    <servlet>
+        <servlet-name>Faces Servlet</servlet-name>
+        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
+        <load-on-startup>1</load-on-startup>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>Faces Servlet</servlet-name>
+        <url-pattern>*.jsf</url-pattern> <!-- *.xhtml *.faces -->
+    </servlet-mapping>
+
+    <listener>
+        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
+    </listener>
+    <listener>
+        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
+    </listener>
+
+</web-app>
\ No newline at end of file
diff --git a/bin/src/main/webapp/login.xhtml b/bin/src/main/webapp/login.xhtml
new file mode 100644
index 0000000..c73a1d9
--- /dev/null
+++ b/bin/src/main/webapp/login.xhtml
@@ -0,0 +1,20 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<ui:composition xmlns="http://www.w3.org/1999/xhtml"
+	xmlns:f="http://java.sun.com/jsf/core" 	xmlns:h="http://java.sun.com/jsf/html"
+	xmlns:ui="http://java.sun.com/jsf/facelets" 	template="/template/template.xhtml">
+	<ui:param name="page_name" value="Connexion" />
+	<ui:define name="menu">
+			<h:form id="form">
+				<b>Connexion</b>
+				<h:panelGrid columns="2">
+					<h:outputText value="Login (Email)" />
+					<h:inputText value="#{employeController.login}" />
+					<h:outputText value="Mot de passe" />
+					<h:inputSecret value="#{employeController.password}" />
+					<h:commandButton id="btn" value="Connexion" action="#{employeController.doLogin()}" />
+					<h:message for="btn"/>
+				</h:panelGrid>
+			</h:form> 
+	</ui:define> 
+</ui:composition> 
+ 
\ No newline at end of file
diff --git a/bin/src/main/webapp/pages/admin/welcome.xhtml b/bin/src/main/webapp/pages/admin/welcome.xhtml
new file mode 100644
index 0000000..7b4bf03
--- /dev/null
+++ b/bin/src/main/webapp/pages/admin/welcome.xhtml
@@ -0,0 +1,136 @@
+<ui:composition xmlns="http://www.w3.org/1999/xhtml"
+	xmlns:f="http://java.sun.com/jsf/core"
+	xmlns:h="http://java.sun.com/jsf/html"
+	xmlns:ui="http://java.sun.com/jsf/facelets"
+	template="/template/template.xhtml">
+
+	<ui:param name="page_name" value="Accueil" />
+
+	<ui:define name="content">
+
+		<h:panelGroup>
+			<h:form>
+				<h:outputText
+					value="Bonjour #{employeController.authenticatedUser.prenom} #{employeController.authenticatedUser.nom}" /> 
+				| 
+				<h:commandLink value="Déconnexion"
+					action="#{employeController.doLogout()}" />
+			</h:form>
+		</h:panelGroup>
+
+
+		<br />
+
+		<h:panelGroup columns="2">
+			<h:form>
+				<table>
+					<tr>
+						<td><h:outputText value="Login (Email)"></h:outputText></td>
+						<td>
+<h:inputText id="validateMail" required="true" validatorMessage="Le format du mail est invalide!" requiredMessage="Mail obligatoire!" value="#{employeController.email}">
+<f:validateRegex pattern=".+\@.+\..+" /> 
+</h:inputText> 
+<h:message for="validateMail" />
+								
+								</td>
+					</tr>
+					<tr>
+						<td><h:outputText value="Mot de Passe"></h:outputText></td>
+						<td><h:inputSecret value="#{employeController.password}"></h:inputSecret></td>
+					</tr>
+					<tr>
+						<td><h:outputText value="Nom"></h:outputText></td>
+						<td><h:inputText value="#{employeController.nom}"></h:inputText></td>
+					</tr>
+					<tr>
+						<td><h:outputText value="Prenom"></h:outputText></td>
+						<td><h:inputText value="#{employeController.prenom}"></h:inputText></td>
+					</tr>
+					<tr>
+						<td><h:outputText value="Actif / Inactif"></h:outputText></td>
+						<td><h:selectBooleanCheckbox
+								value="#{employeController.actif}"></h:selectBooleanCheckbox></td>
+					</tr>
+
+					<tr>
+						<td><h:outputText value="Role"></h:outputText></td>
+						<td><h:selectOneMenu value="#{employeController.role}">
+								<f:selectItem itemLabel="Choisir le Role" itemValue="#{null}" />
+								<f:selectItems value="#{employeController.roles}" />
+							</h:selectOneMenu></td>
+					</tr>
+
+					<tr>
+						<td colspan="2"><h:commandButton value="Ajouter Employé"
+								action="#{employeController.addEmploye()}" /> <h:commandButton
+								value="Mettre A jour Employé"
+								action="#{employeController.updateEmploye()}" /></td>
+					</tr>
+
+				</table>
+			</h:form>
+		</h:panelGroup>
+		<!-- BEGIN : TP2 JSF CRUD Ajout Employé -->
+
+
+		<!-- BEGIN : TP3 JSF List Employes -->
+		<br />
+		<h:panelGroup columns="2">
+			<h:form>
+				<h:dataTable value="#{employeController.employes}" var="employe"
+					border="1">
+					<h:column>
+						<f:facet name="header">
+							<h:outputText value="Login" />
+						</f:facet>
+						<h:outputText value="#{employe.email}" />
+					</h:column>
+					<h:column>
+						<f:facet name="header">
+							<h:outputText value="Prenom" />
+						</f:facet>
+						<h:outputText value="#{employe.prenom}" />
+					</h:column>
+					<h:column>
+						<f:facet name="header">
+							<h:outputText value="Nom" />
+						</f:facet>
+						<h:outputText value="#{employe.nom}" />
+					</h:column>
+					<h:column>
+						<f:facet name="header">
+							<h:outputText value="Role" />
+						</f:facet>
+						<h:outputText value="#{employe.role}" />
+					</h:column>
+					<h:column>
+						<f:facet name="header">
+							<h:outputText value="Actif" />
+						</f:facet>
+						<h:outputText value="#{employe.actif == true ? 'Oui' : 'Non'}" />
+					</h:column>
+
+					<!-- BEGIN :  TP4 JSF Supprimer Employé -->
+					<!-- BEGIN :  TP4 JSF Modifier Employé -->
+					<h:column>
+						<f:facet name="header">
+							<h:outputText value="Action" />
+						</f:facet>
+						<h:commandButton
+							action="#{employeController.removeEmploye(employe.id)}"
+							value="Supprimer" />
+						<h:commandButton
+							action="#{employeController.displayEmploye(employe)}"
+							value="Afficher" />
+					</h:column>
+					<!-- END :  TP4 JSF Supprimer Employé -->
+					<!-- END :  TP4 JSF Modifer Employé -->
+
+				</h:dataTable>
+			</h:form>
+		</h:panelGroup>
+		<!-- END :  TP3 JSF List Employes -->
+
+	</ui:define>
+
+</ui:composition>
\ No newline at end of file
diff --git a/bin/src/main/webapp/template/footer.xhtml b/bin/src/main/webapp/template/footer.xhtml
new file mode 100644
index 0000000..2733bbd
--- /dev/null
+++ b/bin/src/main/webapp/template/footer.xhtml
@@ -0,0 +1,10 @@
+<ui:composition xmlns="http://www.w3.org/1999/xhtml"
+	xmlns:f="http://java.sun.com/jsf/core"
+	xmlns:h="http://java.sun.com/jsf/html"
+	xmlns:ui="http://java.sun.com/jsf/facelets">
+
+		<h:panelGroup>
+			<br /> Mettez ici un pied de page ! <br /><br />  
+		</h:panelGroup>
+  
+</ui:composition>
\ No newline at end of file
diff --git a/bin/src/main/webapp/template/header.xhtml b/bin/src/main/webapp/template/header.xhtml
new file mode 100644
index 0000000..2058701
--- /dev/null
+++ b/bin/src/main/webapp/template/header.xhtml
@@ -0,0 +1,10 @@
+<ui:composition xmlns="http://www.w3.org/1999/xhtml"
+	xmlns:f="http://java.sun.com/jsf/core"
+	xmlns:h="http://java.sun.com/jsf/html"
+	xmlns:ui="http://java.sun.com/jsf/facelets">
+
+		<h:panelGroup>
+			<br /><br /> Mettez ici un en-tête ! <br /><br />
+		</h:panelGroup>
+
+</ui:composition>
\ No newline at end of file
diff --git a/bin/src/main/webapp/template/template.xhtml b/bin/src/main/webapp/template/template.xhtml
new file mode 100644
index 0000000..ff604b7
--- /dev/null
+++ b/bin/src/main/webapp/template/template.xhtml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml"
+	xmlns:h="http://java.sun.com/jsf/html"
+	xmlns:f="http://java.sun.com/jsf/core"
+	xmlns:ui="http://java.sun.com/jsf/facelets">
+<h:head>
+<title>#{page_name}</title>
+</h:head>
+<h:body>
+	<ui:include src="/template/header.xhtml" />
+	
+	<ui:insert name="menu" /> 
+	<ui:insert name="content" />
+	
+	<ui:include src="/template/footer.xhtml" />
+</h:body>
+</html>
diff --git a/bin/src/test/java/tn/esprit/spring/TimesheetApplicationTests.class b/bin/src/test/java/tn/esprit/spring/TimesheetApplicationTests.class
new file mode 100644
index 0000000..11abb28
Binary files /dev/null and b/bin/src/test/java/tn/esprit/spring/TimesheetApplicationTests.class differ
diff --git a/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF b/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
index 6bb6652..3bcde68 100644
--- a/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
+++ b/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
@@ -1,9 +1,9 @@
 Manifest-Version: 1.0
 Implementation-Title: timesheet
 Implementation-Version: 1.0
-Built-By: MANEL
+Built-By: WIEM
 Implementation-Vendor-Id: tn.esprit.spring
-Build-Jdk: 1.8.0_60
+Build-Jdk: 1.8.0_201
 Implementation-URL: https://projects.spring.io/spring-boot/#/spring-bo
  ot-starter-parent/timesheet
 Created-By: Maven Integration for Eclipse
diff --git a/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties b/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
index cd5742d..fe66a99 100644
--- a/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
+++ b/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
@@ -1,7 +1,7 @@
 #Generated by Maven Integration for Eclipse
-#Sat Oct 17 18:04:31 WAT 2020
+#Sat Oct 17 18:56:41 WAT 2020
 version=1.0
 groupId=tn.esprit.spring
-m2e.projectName=timesheet
-m2e.projectLocation=C\:\\Work\\timesheet
+m2e.projectName=Projet_IC
+m2e.projectLocation=C\:\\Users\\21698\\Documents\\workspace-sts-3.8.4.RELEASE\\Projet_IC
 artifactId=timesheet
=======
diff --git a/mypatch.patch b/mypatch.patch
index f3e36e3..8133df5 100644
--- a/mypatch.patch
+++ b/mypatch.patch
@@ -1,5 +1,1380 @@
+<<<<<<< HEAD
 diff --git a/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF b/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
 index 6bb6652..ebea5ce 100644
+=======
+diff --git a/bin/.gitignore b/bin/.gitignore
+new file mode 100644
+index 0000000..a2a3040
+--- /dev/null
++++ b/bin/.gitignore
+@@ -0,0 +1,31 @@
++HELP.md
++target/
++!.mvn/wrapper/maven-wrapper.jar
++!**/src/main/**
++!**/src/test/**
++
++### STS ###
++.apt_generated
++.classpath
++.factorypath
++.project
++.settings
++.springBeans
++.sts4-cache
++
++### IntelliJ IDEA ###
++.idea
++*.iws
++*.iml
++*.ipr
++
++### NetBeans ###
++/nbproject/private/
++/nbbuild/
++/dist/
++/nbdist/
++/.nb-gradle/
++build/
++
++### VS Code ###
++.vscode/
+diff --git a/bin/.mvn/wrapper/MavenWrapperDownloader.class b/bin/.mvn/wrapper/MavenWrapperDownloader.class
+new file mode 100644
+index 0000000..17490b3
+Binary files /dev/null and b/bin/.mvn/wrapper/MavenWrapperDownloader.class differ
+diff --git a/bin/.mvn/wrapper/maven-wrapper.jar b/bin/.mvn/wrapper/maven-wrapper.jar
+new file mode 100644
+index 0000000..2cc7d4a
+Binary files /dev/null and b/bin/.mvn/wrapper/maven-wrapper.jar differ
+diff --git a/bin/.mvn/wrapper/maven-wrapper.properties b/bin/.mvn/wrapper/maven-wrapper.properties
+new file mode 100644
+index 0000000..642d572
+--- /dev/null
++++ b/bin/.mvn/wrapper/maven-wrapper.properties
+@@ -0,0 +1,2 @@
++distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip
++wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar
+diff --git a/bin/mvnw b/bin/mvnw
+new file mode 100644
+index 0000000..a16b543
+--- /dev/null
++++ b/bin/mvnw
+@@ -0,0 +1,310 @@
++#!/bin/sh
++# ----------------------------------------------------------------------------
++# Licensed to the Apache Software Foundation (ASF) under one
++# or more contributor license agreements.  See the NOTICE file
++# distributed with this work for additional information
++# regarding copyright ownership.  The ASF licenses this file
++# to you under the Apache License, Version 2.0 (the
++# "License"); you may not use this file except in compliance
++# with the License.  You may obtain a copy of the License at
++#
++#    https://www.apache.org/licenses/LICENSE-2.0
++#
++# Unless required by applicable law or agreed to in writing,
++# software distributed under the License is distributed on an
++# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
++# KIND, either express or implied.  See the License for the
++# specific language governing permissions and limitations
++# under the License.
++# ----------------------------------------------------------------------------
++
++# ----------------------------------------------------------------------------
++# Maven Start Up Batch script
++#
++# Required ENV vars:
++# ------------------
++#   JAVA_HOME - location of a JDK home dir
++#
++# Optional ENV vars
++# -----------------
++#   M2_HOME - location of maven2's installed home dir
++#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
++#     e.g. to debug Maven itself, use
++#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
++#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
++# ----------------------------------------------------------------------------
++
++if [ -z "$MAVEN_SKIP_RC" ] ; then
++
++  if [ -f /etc/mavenrc ] ; then
++    . /etc/mavenrc
++  fi
++
++  if [ -f "$HOME/.mavenrc" ] ; then
++    . "$HOME/.mavenrc"
++  fi
++
++fi
++
++# OS specific support.  $var _must_ be set to either true or false.
++cygwin=false;
++darwin=false;
++mingw=false
++case "`uname`" in
++  CYGWIN*) cygwin=true ;;
++  MINGW*) mingw=true;;
++  Darwin*) darwin=true
++    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
++    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
++    if [ -z "$JAVA_HOME" ]; then
++      if [ -x "/usr/libexec/java_home" ]; then
++        export JAVA_HOME="`/usr/libexec/java_home`"
++      else
++        export JAVA_HOME="/Library/Java/Home"
++      fi
++    fi
++    ;;
++esac
++
++if [ -z "$JAVA_HOME" ] ; then
++  if [ -r /etc/gentoo-release ] ; then
++    JAVA_HOME=`java-config --jre-home`
++  fi
++fi
++
++if [ -z "$M2_HOME" ] ; then
++  ## resolve links - $0 may be a link to maven's home
++  PRG="$0"
++
++  # need this for relative symlinks
++  while [ -h "$PRG" ] ; do
++    ls=`ls -ld "$PRG"`
++    link=`expr "$ls" : '.*-> \(.*\)$'`
++    if expr "$link" : '/.*' > /dev/null; then
++      PRG="$link"
++    else
++      PRG="`dirname "$PRG"`/$link"
++    fi
++  done
++
++  saveddir=`pwd`
++
++  M2_HOME=`dirname "$PRG"`/..
++
++  # make it fully qualified
++  M2_HOME=`cd "$M2_HOME" && pwd`
++
++  cd "$saveddir"
++  # echo Using m2 at $M2_HOME
++fi
++
++# For Cygwin, ensure paths are in UNIX format before anything is touched
++if $cygwin ; then
++  [ -n "$M2_HOME" ] &&
++    M2_HOME=`cygpath --unix "$M2_HOME"`
++  [ -n "$JAVA_HOME" ] &&
++    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
++  [ -n "$CLASSPATH" ] &&
++    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
++fi
++
++# For Mingw, ensure paths are in UNIX format before anything is touched
++if $mingw ; then
++  [ -n "$M2_HOME" ] &&
++    M2_HOME="`(cd "$M2_HOME"; pwd)`"
++  [ -n "$JAVA_HOME" ] &&
++    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
++fi
++
++if [ -z "$JAVA_HOME" ]; then
++  javaExecutable="`which javac`"
++  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
++    # readlink(1) is not available as standard on Solaris 10.
++    readLink=`which readlink`
++    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
++      if $darwin ; then
++        javaHome="`dirname \"$javaExecutable\"`"
++        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
++      else
++        javaExecutable="`readlink -f \"$javaExecutable\"`"
++      fi
++      javaHome="`dirname \"$javaExecutable\"`"
++      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
++      JAVA_HOME="$javaHome"
++      export JAVA_HOME
++    fi
++  fi
++fi
++
++if [ -z "$JAVACMD" ] ; then
++  if [ -n "$JAVA_HOME"  ] ; then
++    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
++      # IBM's JDK on AIX uses strange locations for the executables
++      JAVACMD="$JAVA_HOME/jre/sh/java"
++    else
++      JAVACMD="$JAVA_HOME/bin/java"
++    fi
++  else
++    JAVACMD="`which java`"
++  fi
++fi
++
++if [ ! -x "$JAVACMD" ] ; then
++  echo "Error: JAVA_HOME is not defined correctly." >&2
++  echo "  We cannot execute $JAVACMD" >&2
++  exit 1
++fi
++
++if [ -z "$JAVA_HOME" ] ; then
++  echo "Warning: JAVA_HOME environment variable is not set."
++fi
++
++CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
++
++# traverses directory structure from process work directory to filesystem root
++# first directory with .mvn subdirectory is considered project base directory
++find_maven_basedir() {
++
++  if [ -z "$1" ]
++  then
++    echo "Path not specified to find_maven_basedir"
++    return 1
++  fi
++
++  basedir="$1"
++  wdir="$1"
++  while [ "$wdir" != '/' ] ; do
++    if [ -d "$wdir"/.mvn ] ; then
++      basedir=$wdir
++      break
++    fi
++    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
++    if [ -d "${wdir}" ]; then
++      wdir=`cd "$wdir/.."; pwd`
++    fi
++    # end of workaround
++  done
++  echo "${basedir}"
++}
++
++# concatenates all lines of a file
++concat_lines() {
++  if [ -f "$1" ]; then
++    echo "$(tr -s '\n' ' ' < "$1")"
++  fi
++}
++
++BASE_DIR=`find_maven_basedir "$(pwd)"`
++if [ -z "$BASE_DIR" ]; then
++  exit 1;
++fi
++
++##########################################################################################
++# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
++# This allows using the maven wrapper in projects that prohibit checking in binary data.
++##########################################################################################
++if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
++    if [ "$MVNW_VERBOSE" = true ]; then
++      echo "Found .mvn/wrapper/maven-wrapper.jar"
++    fi
++else
++    if [ "$MVNW_VERBOSE" = true ]; then
++      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
++    fi
++    if [ -n "$MVNW_REPOURL" ]; then
++      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
++    else
++      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
++    fi
++    while IFS="=" read key value; do
++      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
++      esac
++    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
++    if [ "$MVNW_VERBOSE" = true ]; then
++      echo "Downloading from: $jarUrl"
++    fi
++    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
++    if $cygwin; then
++      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
++    fi
++
++    if command -v wget > /dev/null; then
++        if [ "$MVNW_VERBOSE" = true ]; then
++          echo "Found wget ... using wget"
++        fi
++        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
++            wget "$jarUrl" -O "$wrapperJarPath"
++        else
++            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
++        fi
++    elif command -v curl > /dev/null; then
++        if [ "$MVNW_VERBOSE" = true ]; then
++          echo "Found curl ... using curl"
++        fi
++        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
++            curl -o "$wrapperJarPath" "$jarUrl" -f
++        else
++            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
++        fi
++
++    else
++        if [ "$MVNW_VERBOSE" = true ]; then
++          echo "Falling back to using Java to download"
++        fi
++        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
++        # For Cygwin, switch paths to Windows format before running javac
++        if $cygwin; then
++          javaClass=`cygpath --path --windows "$javaClass"`
++        fi
++        if [ -e "$javaClass" ]; then
++            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
++                if [ "$MVNW_VERBOSE" = true ]; then
++                  echo " - Compiling MavenWrapperDownloader.java ..."
++                fi
++                # Compiling the Java class
++                ("$JAVA_HOME/bin/javac" "$javaClass")
++            fi
++            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
++                # Running the downloader
++                if [ "$MVNW_VERBOSE" = true ]; then
++                  echo " - Running MavenWrapperDownloader.java ..."
++                fi
++                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
++            fi
++        fi
++    fi
++fi
++##########################################################################################
++# End of extension
++##########################################################################################
++
++export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
++if [ "$MVNW_VERBOSE" = true ]; then
++  echo $MAVEN_PROJECTBASEDIR
++fi
++MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
++
++# For Cygwin, switch paths to Windows format before running java
++if $cygwin; then
++  [ -n "$M2_HOME" ] &&
++    M2_HOME=`cygpath --path --windows "$M2_HOME"`
++  [ -n "$JAVA_HOME" ] &&
++    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
++  [ -n "$CLASSPATH" ] &&
++    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
++  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
++    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
++fi
++
++# Provide a "standardized" way to retrieve the CLI args that will
++# work with both Windows and non-Windows executions.
++MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
++export MAVEN_CMD_LINE_ARGS
++
++WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
++
++exec "$JAVACMD" \
++  $MAVEN_OPTS \
++  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
++  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
++  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
+diff --git a/bin/mvnw.cmd b/bin/mvnw.cmd
+new file mode 100644
+index 0000000..c8d4337
+--- /dev/null
++++ b/bin/mvnw.cmd
+@@ -0,0 +1,182 @@
++@REM ----------------------------------------------------------------------------
++@REM Licensed to the Apache Software Foundation (ASF) under one
++@REM or more contributor license agreements.  See the NOTICE file
++@REM distributed with this work for additional information
++@REM regarding copyright ownership.  The ASF licenses this file
++@REM to you under the Apache License, Version 2.0 (the
++@REM "License"); you may not use this file except in compliance
++@REM with the License.  You may obtain a copy of the License at
++@REM
++@REM    https://www.apache.org/licenses/LICENSE-2.0
++@REM
++@REM Unless required by applicable law or agreed to in writing,
++@REM software distributed under the License is distributed on an
++@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
++@REM KIND, either express or implied.  See the License for the
++@REM specific language governing permissions and limitations
++@REM under the License.
++@REM ----------------------------------------------------------------------------
++
++@REM ----------------------------------------------------------------------------
++@REM Maven Start Up Batch script
++@REM
++@REM Required ENV vars:
++@REM JAVA_HOME - location of a JDK home dir
++@REM
++@REM Optional ENV vars
++@REM M2_HOME - location of maven2's installed home dir
++@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
++@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending
++@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
++@REM     e.g. to debug Maven itself, use
++@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
++@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
++@REM ----------------------------------------------------------------------------
++
++@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
++@echo off
++@REM set title of command window
++title %0
++@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
++@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
++
++@REM set %HOME% to equivalent of $HOME
++if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
++
++@REM Execute a user defined script before this one
++if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
++@REM check for pre script, once with legacy .bat ending and once with .cmd ending
++if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
++if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
++:skipRcPre
++
++@setlocal
++
++set ERROR_CODE=0
++
++@REM To isolate internal variables from possible post scripts, we use another setlocal
++@setlocal
++
++@REM ==== START VALIDATION ====
++if not "%JAVA_HOME%" == "" goto OkJHome
++
++echo.
++echo Error: JAVA_HOME not found in your environment. >&2
++echo Please set the JAVA_HOME variable in your environment to match the >&2
++echo location of your Java installation. >&2
++echo.
++goto error
++
++:OkJHome
++if exist "%JAVA_HOME%\bin\java.exe" goto init
++
++echo.
++echo Error: JAVA_HOME is set to an invalid directory. >&2
++echo JAVA_HOME = "%JAVA_HOME%" >&2
++echo Please set the JAVA_HOME variable in your environment to match the >&2
++echo location of your Java installation. >&2
++echo.
++goto error
++
++@REM ==== END VALIDATION ====
++
++:init
++
++@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
++@REM Fallback to current working directory if not found.
++
++set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
++IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
++
++set EXEC_DIR=%CD%
++set WDIR=%EXEC_DIR%
++:findBaseDir
++IF EXIST "%WDIR%"\.mvn goto baseDirFound
++cd ..
++IF "%WDIR%"=="%CD%" goto baseDirNotFound
++set WDIR=%CD%
++goto findBaseDir
++
++:baseDirFound
++set MAVEN_PROJECTBASEDIR=%WDIR%
++cd "%EXEC_DIR%"
++goto endDetectBaseDir
++
++:baseDirNotFound
++set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
++cd "%EXEC_DIR%"
++
++:endDetectBaseDir
++
++IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
++
++@setlocal EnableExtensions EnableDelayedExpansion
++for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
++@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
++
++:endReadAdditionalConfig
++
++SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
++set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
++set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
++
++set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
++
++FOR /F "tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
++    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
++)
++
++@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
++@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
++if exist %WRAPPER_JAR% (
++    if "%MVNW_VERBOSE%" == "true" (
++        echo Found %WRAPPER_JAR%
++    )
++) else (
++    if not "%MVNW_REPOURL%" == "" (
++        SET DOWNLOAD_URL="%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
++    )
++    if "%MVNW_VERBOSE%" == "true" (
++        echo Couldn't find %WRAPPER_JAR%, downloading it ...
++        echo Downloading from: %DOWNLOAD_URL%
++    )
++
++    powershell -Command "&{"^
++		"$webclient = new-object System.Net.WebClient;"^
++		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
++		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
++		"}"^
++		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
++		"}"
++    if "%MVNW_VERBOSE%" == "true" (
++        echo Finished downloading %WRAPPER_JAR%
++    )
++)
++@REM End of extension
++
++@REM Provide a "standardized" way to retrieve the CLI args that will
++@REM work with both Windows and non-Windows executions.
++set MAVEN_CMD_LINE_ARGS=%*
++
++%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
++if ERRORLEVEL 1 goto error
++goto end
++
++:error
++set ERROR_CODE=1
++
++:end
++@endlocal & set ERROR_CODE=%ERROR_CODE%
++
++if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
++@REM check for post script, once with legacy .bat ending and once with .cmd ending
++if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
++if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
++:skipRcPost
++
++@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
++if "%MAVEN_BATCH_PAUSE%" == "on" pause
++
++if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
++
++exit /B %ERROR_CODE%
+diff --git a/bin/pom.xml b/bin/pom.xml
+new file mode 100644
+index 0000000..31f8707
+--- /dev/null
++++ b/bin/pom.xml
+@@ -0,0 +1,114 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
++	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
++	<modelVersion>4.0.0</modelVersion>
++	<parent>
++		<groupId>org.springframework.boot</groupId>
++		<artifactId>spring-boot-starter-parent</artifactId>
++		<version>2.2.1.RELEASE</version>
++		<relativePath /> <!-- lookup parent from repository -->
++	</parent>
++	<groupId>tn.esprit.spring</groupId>
++	<artifactId>timesheet</artifactId>
++	<version>1.0</version>
++	<name>timesheet</name>
++	<description>timesheet</description>
++
++	<properties>
++		<java.version>1.8</java.version>
++		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
++	</properties>
++
++	<dependencies>
++
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-devtools</artifactId>
++		</dependency>
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-starter-data-jpa</artifactId>
++		</dependency>
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-starter-web</artifactId>
++		</dependency>
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-starter-validation</artifactId>
++		</dependency>
++
++		<dependency>
++			<groupId>mysql</groupId>
++			<artifactId>mysql-connector-java</artifactId>
++			<scope>runtime</scope>
++		</dependency>
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-starter-test</artifactId>
++			<scope>test</scope>
++			<exclusions>
++				<exclusion>
++					<groupId>org.junit.vintage</groupId>
++					<artifactId>junit-vintage-engine</artifactId>
++				</exclusion>
++			</exclusions>
++		</dependency>
++
++		<!-- JSF -->
++		<dependency>
++			<groupId>org.apache.myfaces.core</groupId>
++			<artifactId>myfaces-impl</artifactId>
++			<version>2.2.12</version>
++		</dependency>
++		<dependency>
++			<groupId>org.apache.myfaces.core</groupId>
++			<artifactId>myfaces-api</artifactId>
++			<version>2.2.12</version>
++		</dependency>
++		<dependency>
++			<groupId>org.apache.tomcat.embed</groupId>
++			<artifactId>tomcat-embed-jasper</artifactId>
++		</dependency>
++		<dependency>
++			<groupId>org.ocpsoft.rewrite</groupId>
++			<artifactId>rewrite-servlet</artifactId>
++			<version>3.4.1.Final</version>
++		</dependency>
++		<dependency>
++			<groupId>org.ocpsoft.rewrite</groupId>
++			<artifactId>rewrite-integration-faces</artifactId>
++			<version>3.4.1.Final</version>
++		</dependency>
++		<dependency>
++			<groupId>org.ocpsoft.rewrite</groupId>
++			<artifactId>rewrite-config-prettyfaces</artifactId>
++			<version>3.4.1.Final</version>
++		</dependency>
++		<dependency>
++			<groupId>org.primefaces</groupId>
++			<artifactId>primefaces</artifactId>
++			<version>6.1</version>
++		</dependency>
++		<dependency>
++			<groupId>org.projectlombok</groupId>
++			<artifactId>lombok</artifactId>
++			<version>1.16.16</version>
++		</dependency>
++		<!-- JSF -->
++
++	</dependencies>
++
++
++
++	<build>
++		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
++		<plugins>
++			<plugin>
++				<groupId>org.springframework.boot</groupId>
++				<artifactId>spring-boot-maven-plugin</artifactId>
++			</plugin>
++		</plugins>
++	</build>
++
++</project>
+diff --git a/bin/src/main/java/tn/esprit/spring/TimesheetApplication.class b/bin/src/main/java/tn/esprit/spring/TimesheetApplication.class
+new file mode 100644
+index 0000000..c32eaa2
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/TimesheetApplication.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/config/LoginFilter.class b/bin/src/main/java/tn/esprit/spring/config/LoginFilter.class
+new file mode 100644
+index 0000000..a937204
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/config/LoginFilter.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/controller/ControllerEmployeImpl.class b/bin/src/main/java/tn/esprit/spring/controller/ControllerEmployeImpl.class
+new file mode 100644
+index 0000000..37d4431
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/ControllerEmployeImpl.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/controller/ControllerEntrepriseImpl.class b/bin/src/main/java/tn/esprit/spring/controller/ControllerEntrepriseImpl.class
+new file mode 100644
+index 0000000..bd098e5
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/ControllerEntrepriseImpl.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/controller/ControllerTimesheetImpl.class b/bin/src/main/java/tn/esprit/spring/controller/ControllerTimesheetImpl.class
+new file mode 100644
+index 0000000..c49c3c4
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/ControllerTimesheetImpl.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/controller/RestControlEmploye.class b/bin/src/main/java/tn/esprit/spring/controller/RestControlEmploye.class
+new file mode 100644
+index 0000000..ae7a8ea
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/RestControlEmploye.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/controller/RestControlEntreprise.class b/bin/src/main/java/tn/esprit/spring/controller/RestControlEntreprise.class
+new file mode 100644
+index 0000000..fc7c887
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/RestControlEntreprise.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/controller/RestControlTimesheet.class b/bin/src/main/java/tn/esprit/spring/controller/RestControlTimesheet.class
+new file mode 100644
+index 0000000..7096690
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/controller/RestControlTimesheet.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/entities/Contrat.class b/bin/src/main/java/tn/esprit/spring/entities/Contrat.class
+new file mode 100644
+index 0000000..6b6f51a
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Contrat.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/entities/Departement.class b/bin/src/main/java/tn/esprit/spring/entities/Departement.class
+new file mode 100644
+index 0000000..ea4885d
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Departement.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/entities/Employe.class b/bin/src/main/java/tn/esprit/spring/entities/Employe.class
+new file mode 100644
+index 0000000..a84be74
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Employe.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/entities/Entreprise.class b/bin/src/main/java/tn/esprit/spring/entities/Entreprise.class
+new file mode 100644
+index 0000000..102869c
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Entreprise.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/entities/Mission.class b/bin/src/main/java/tn/esprit/spring/entities/Mission.class
+new file mode 100644
+index 0000000..ef4c6b2
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Mission.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/entities/MissionExterne.class b/bin/src/main/java/tn/esprit/spring/entities/MissionExterne.class
+new file mode 100644
+index 0000000..00f200b
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/MissionExterne.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/entities/Role.class b/bin/src/main/java/tn/esprit/spring/entities/Role.class
+new file mode 100644
+index 0000000..d8985d4
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Role.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/entities/Timesheet.class b/bin/src/main/java/tn/esprit/spring/entities/Timesheet.class
+new file mode 100644
+index 0000000..34a29f1
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/Timesheet.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/entities/TimesheetPK.class b/bin/src/main/java/tn/esprit/spring/entities/TimesheetPK.class
+new file mode 100644
+index 0000000..6952891
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/entities/TimesheetPK.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/repository/ContratRepository.class b/bin/src/main/java/tn/esprit/spring/repository/ContratRepository.class
+new file mode 100644
+index 0000000..f4d576b
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/ContratRepository.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/repository/DepartementRepository.class b/bin/src/main/java/tn/esprit/spring/repository/DepartementRepository.class
+new file mode 100644
+index 0000000..a724203
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/DepartementRepository.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/repository/EmployeRepository.class b/bin/src/main/java/tn/esprit/spring/repository/EmployeRepository.class
+new file mode 100644
+index 0000000..f33ea0d
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/EmployeRepository.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/repository/EntrepriseRepository.class b/bin/src/main/java/tn/esprit/spring/repository/EntrepriseRepository.class
+new file mode 100644
+index 0000000..3c466a9
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/EntrepriseRepository.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/repository/MissionRepository.class b/bin/src/main/java/tn/esprit/spring/repository/MissionRepository.class
+new file mode 100644
+index 0000000..27ebfd1
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/MissionRepository.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/repository/TimesheetRepository.class b/bin/src/main/java/tn/esprit/spring/repository/TimesheetRepository.class
+new file mode 100644
+index 0000000..71ae808
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/repository/TimesheetRepository.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/ContratServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/ContratServiceImpl.class
+new file mode 100644
+index 0000000..a3ca20d
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/ContratServiceImpl.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/DepartementServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/DepartementServiceImpl.class
+new file mode 100644
+index 0000000..6568834
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/DepartementServiceImpl.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.class
+new file mode 100644
+index 0000000..0cad30a
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/EntrepriseServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/EntrepriseServiceImpl.class
+new file mode 100644
+index 0000000..706a550
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/EntrepriseServiceImpl.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/IContratService.class b/bin/src/main/java/tn/esprit/spring/services/IContratService.class
+new file mode 100644
+index 0000000..a88bbc2
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/IContratService.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/IDepartementService.class b/bin/src/main/java/tn/esprit/spring/services/IDepartementService.class
+new file mode 100644
+index 0000000..78d4571
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/IDepartementService.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/IEmployeService.class b/bin/src/main/java/tn/esprit/spring/services/IEmployeService.class
+new file mode 100644
+index 0000000..8cbefcb
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/IEmployeService.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/IEntrepriseService.class b/bin/src/main/java/tn/esprit/spring/services/IEntrepriseService.class
+new file mode 100644
+index 0000000..c121335
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/IEntrepriseService.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/ITimesheetService.class b/bin/src/main/java/tn/esprit/spring/services/ITimesheetService.class
+new file mode 100644
+index 0000000..7cc6976
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/ITimesheetService.class differ
+diff --git a/bin/src/main/java/tn/esprit/spring/services/TimesheetServiceImpl.class b/bin/src/main/java/tn/esprit/spring/services/TimesheetServiceImpl.class
+new file mode 100644
+index 0000000..5524e6f
+Binary files /dev/null and b/bin/src/main/java/tn/esprit/spring/services/TimesheetServiceImpl.class differ
+diff --git a/bin/src/main/resources/application.properties b/bin/src/main/resources/application.properties
+new file mode 100644
+index 0000000..0ddd527
+--- /dev/null
++++ b/bin/src/main/resources/application.properties
+@@ -0,0 +1,29 @@
++
++#http://localhost:8081/SpringMVC/servlet/sayHello?myName=Walid
++
++#Web configuration
++spring.mvc.view.prefix=/views/
++spring.mvc.view.suffix=.jsp
++
++#Server configuration
++server.servlet.context-path=/SpringMVC
++spring.mvc.servlet.path=/servlet
++ 
++server.port=8081
++
++### DATABASE ###
++#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
++spring.datasource.url=jdbc:mysql://localhost:3306/timesheet-spring?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
++spring.datasource.username=root
++spring.datasource.password=
++### JPA / HIBERNATE ###
++spring.jpa.show-sql=true
++spring.jpa.hibernate.ddl-auto=update
++spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
++
++#logging configuration
++logging.level.com.zaxxer.hikari=warn
++logging.level.org.springframework=warn 
++logging.level.root=INFO
++logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %-5level - %logger{60} - %msg%n
++
+diff --git a/bin/src/main/resources/log4j.xml b/bin/src/main/resources/log4j.xml
+new file mode 100644
+index 0000000..e049923
+--- /dev/null
++++ b/bin/src/main/resources/log4j.xml
+@@ -0,0 +1,25 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
++
++<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
++
++<appender name="console" class="org.apache.log4j.ConsoleAppender">
++
++<layout class="org.apache.log4j.PatternLayout"> <param name="ConversionPattern" value="%d{yyyy-
++MM-dd HH:mm:ss} %l:%L - %m%n" /> </layout>
++
++</appender>
++
++<appender name="file" class="org.apache.log4j.RollingFileAppender">
++<param name="append" value="true" /> <param name="maxFileSize" value="10MB" />
++<param name="maxBackupIndex" value="10" /> <param name="file" value="C:/logs/formation.log"
++/>
++
++<layout class="org.apache.log4j.PatternLayout"> <param name="ConversionPattern" value="%d{yyyy-
++MM-dd HH:mm:ss} %l:%L - %m%n" /></layout>
++
++</appender>
++
++<root> <level value="DEBUG" /> <appender-ref ref="console" /> <appender-ref ref="file" /> </root>
++
++</log4j:configuration>
+\ No newline at end of file
+diff --git a/bin/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF b/bin/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
+new file mode 100644
+index 0000000..3bcde68
+--- /dev/null
++++ b/bin/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
+@@ -0,0 +1,10 @@
++Manifest-Version: 1.0
++Implementation-Title: timesheet
++Implementation-Version: 1.0
++Built-By: WIEM
++Implementation-Vendor-Id: tn.esprit.spring
++Build-Jdk: 1.8.0_201
++Implementation-URL: https://projects.spring.io/spring-boot/#/spring-bo
++ ot-starter-parent/timesheet
++Created-By: Maven Integration for Eclipse
++
+diff --git a/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties b/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
+new file mode 100644
+index 0000000..08c9469
+--- /dev/null
++++ b/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
+@@ -0,0 +1,7 @@
++#Generated by Maven Integration for Eclipse
++#Sat Oct 17 18:42:22 WAT 2020
++version=1.0
++groupId=tn.esprit.spring
++m2e.projectName=Projet_IC
++m2e.projectLocation=C\:\\Users\\21698\\Documents\\workspace-sts-3.8.4.RELEASE\\Projet_IC
++artifactId=timesheet
+diff --git a/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.xml b/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.xml
+new file mode 100644
+index 0000000..31f8707
+--- /dev/null
++++ b/bin/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.xml
+@@ -0,0 +1,114 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
++	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
++	<modelVersion>4.0.0</modelVersion>
++	<parent>
++		<groupId>org.springframework.boot</groupId>
++		<artifactId>spring-boot-starter-parent</artifactId>
++		<version>2.2.1.RELEASE</version>
++		<relativePath /> <!-- lookup parent from repository -->
++	</parent>
++	<groupId>tn.esprit.spring</groupId>
++	<artifactId>timesheet</artifactId>
++	<version>1.0</version>
++	<name>timesheet</name>
++	<description>timesheet</description>
++
++	<properties>
++		<java.version>1.8</java.version>
++		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
++	</properties>
++
++	<dependencies>
++
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-devtools</artifactId>
++		</dependency>
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-starter-data-jpa</artifactId>
++		</dependency>
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-starter-web</artifactId>
++		</dependency>
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-starter-validation</artifactId>
++		</dependency>
++
++		<dependency>
++			<groupId>mysql</groupId>
++			<artifactId>mysql-connector-java</artifactId>
++			<scope>runtime</scope>
++		</dependency>
++		<dependency>
++			<groupId>org.springframework.boot</groupId>
++			<artifactId>spring-boot-starter-test</artifactId>
++			<scope>test</scope>
++			<exclusions>
++				<exclusion>
++					<groupId>org.junit.vintage</groupId>
++					<artifactId>junit-vintage-engine</artifactId>
++				</exclusion>
++			</exclusions>
++		</dependency>
++
++		<!-- JSF -->
++		<dependency>
++			<groupId>org.apache.myfaces.core</groupId>
++			<artifactId>myfaces-impl</artifactId>
++			<version>2.2.12</version>
++		</dependency>
++		<dependency>
++			<groupId>org.apache.myfaces.core</groupId>
++			<artifactId>myfaces-api</artifactId>
++			<version>2.2.12</version>
++		</dependency>
++		<dependency>
++			<groupId>org.apache.tomcat.embed</groupId>
++			<artifactId>tomcat-embed-jasper</artifactId>
++		</dependency>
++		<dependency>
++			<groupId>org.ocpsoft.rewrite</groupId>
++			<artifactId>rewrite-servlet</artifactId>
++			<version>3.4.1.Final</version>
++		</dependency>
++		<dependency>
++			<groupId>org.ocpsoft.rewrite</groupId>
++			<artifactId>rewrite-integration-faces</artifactId>
++			<version>3.4.1.Final</version>
++		</dependency>
++		<dependency>
++			<groupId>org.ocpsoft.rewrite</groupId>
++			<artifactId>rewrite-config-prettyfaces</artifactId>
++			<version>3.4.1.Final</version>
++		</dependency>
++		<dependency>
++			<groupId>org.primefaces</groupId>
++			<artifactId>primefaces</artifactId>
++			<version>6.1</version>
++		</dependency>
++		<dependency>
++			<groupId>org.projectlombok</groupId>
++			<artifactId>lombok</artifactId>
++			<version>1.16.16</version>
++		</dependency>
++		<!-- JSF -->
++
++	</dependencies>
++
++
++
++	<build>
++		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
++		<plugins>
++			<plugin>
++				<groupId>org.springframework.boot</groupId>
++				<artifactId>spring-boot-maven-plugin</artifactId>
++			</plugin>
++		</plugins>
++	</build>
++
++</project>
+diff --git a/bin/src/main/webapp/WEB-INF/classes/application.properties b/bin/src/main/webapp/WEB-INF/classes/application.properties
+new file mode 100644
+index 0000000..0ddd527
+--- /dev/null
++++ b/bin/src/main/webapp/WEB-INF/classes/application.properties
+@@ -0,0 +1,29 @@
++
++#http://localhost:8081/SpringMVC/servlet/sayHello?myName=Walid
++
++#Web configuration
++spring.mvc.view.prefix=/views/
++spring.mvc.view.suffix=.jsp
++
++#Server configuration
++server.servlet.context-path=/SpringMVC
++spring.mvc.servlet.path=/servlet
++ 
++server.port=8081
++
++### DATABASE ###
++#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
++spring.datasource.url=jdbc:mysql://localhost:3306/timesheet-spring?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
++spring.datasource.username=root
++spring.datasource.password=
++### JPA / HIBERNATE ###
++spring.jpa.show-sql=true
++spring.jpa.hibernate.ddl-auto=update
++spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
++
++#logging configuration
++logging.level.com.zaxxer.hikari=warn
++logging.level.org.springframework=warn 
++logging.level.root=INFO
++logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %-5level - %logger{60} - %msg%n
++
+diff --git a/bin/src/main/webapp/WEB-INF/classes/log4j.xml b/bin/src/main/webapp/WEB-INF/classes/log4j.xml
+new file mode 100644
+index 0000000..e049923
+--- /dev/null
++++ b/bin/src/main/webapp/WEB-INF/classes/log4j.xml
+@@ -0,0 +1,25 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
++
++<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
++
++<appender name="console" class="org.apache.log4j.ConsoleAppender">
++
++<layout class="org.apache.log4j.PatternLayout"> <param name="ConversionPattern" value="%d{yyyy-
++MM-dd HH:mm:ss} %l:%L - %m%n" /> </layout>
++
++</appender>
++
++<appender name="file" class="org.apache.log4j.RollingFileAppender">
++<param name="append" value="true" /> <param name="maxFileSize" value="10MB" />
++<param name="maxBackupIndex" value="10" /> <param name="file" value="C:/logs/formation.log"
++/>
++
++<layout class="org.apache.log4j.PatternLayout"> <param name="ConversionPattern" value="%d{yyyy-
++MM-dd HH:mm:ss} %l:%L - %m%n" /></layout>
++
++</appender>
++
++<root> <level value="DEBUG" /> <appender-ref ref="console" /> <appender-ref ref="file" /> </root>
++
++</log4j:configuration>
+\ No newline at end of file
+diff --git a/bin/src/main/webapp/WEB-INF/faces-config.xml b/bin/src/main/webapp/WEB-INF/faces-config.xml
+new file mode 100644
+index 0000000..c482674
+--- /dev/null
++++ b/bin/src/main/webapp/WEB-INF/faces-config.xml
+@@ -0,0 +1,11 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<faces-config xmlns="http://xmlns.jcp.org/xml/ns/javaee"
++	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
++	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-facesconfig_2_2.xsd"
++	version="2.2">
++
++	<application>
++		<el-resolver>org.springframework.web.jsf.el.SpringBeanFacesELResolver</el-resolver>
++	</application>
++
++</faces-config>
+\ No newline at end of file
+diff --git a/bin/src/main/webapp/WEB-INF/web.xml b/bin/src/main/webapp/WEB-INF/web.xml
+new file mode 100644
+index 0000000..2f83d9a
+--- /dev/null
++++ b/bin/src/main/webapp/WEB-INF/web.xml
+@@ -0,0 +1,20 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" version="3.1">
++    <servlet>
++        <servlet-name>Faces Servlet</servlet-name>
++        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
++        <load-on-startup>1</load-on-startup>
++    </servlet>
++    <servlet-mapping>
++        <servlet-name>Faces Servlet</servlet-name>
++        <url-pattern>*.jsf</url-pattern> <!-- *.xhtml *.faces -->
++    </servlet-mapping>
++
++    <listener>
++        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
++    </listener>
++    <listener>
++        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
++    </listener>
++
++</web-app>
+\ No newline at end of file
+diff --git a/bin/src/main/webapp/login.xhtml b/bin/src/main/webapp/login.xhtml
+new file mode 100644
+index 0000000..c73a1d9
+--- /dev/null
++++ b/bin/src/main/webapp/login.xhtml
+@@ -0,0 +1,20 @@
++<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
++<ui:composition xmlns="http://www.w3.org/1999/xhtml"
++	xmlns:f="http://java.sun.com/jsf/core" 	xmlns:h="http://java.sun.com/jsf/html"
++	xmlns:ui="http://java.sun.com/jsf/facelets" 	template="/template/template.xhtml">
++	<ui:param name="page_name" value="Connexion" />
++	<ui:define name="menu">
++			<h:form id="form">
++				<b>Connexion</b>
++				<h:panelGrid columns="2">
++					<h:outputText value="Login (Email)" />
++					<h:inputText value="#{employeController.login}" />
++					<h:outputText value="Mot de passe" />
++					<h:inputSecret value="#{employeController.password}" />
++					<h:commandButton id="btn" value="Connexion" action="#{employeController.doLogin()}" />
++					<h:message for="btn"/>
++				</h:panelGrid>
++			</h:form> 
++	</ui:define> 
++</ui:composition> 
++ 
+\ No newline at end of file
+diff --git a/bin/src/main/webapp/pages/admin/welcome.xhtml b/bin/src/main/webapp/pages/admin/welcome.xhtml
+new file mode 100644
+index 0000000..7b4bf03
+--- /dev/null
++++ b/bin/src/main/webapp/pages/admin/welcome.xhtml
+@@ -0,0 +1,136 @@
++<ui:composition xmlns="http://www.w3.org/1999/xhtml"
++	xmlns:f="http://java.sun.com/jsf/core"
++	xmlns:h="http://java.sun.com/jsf/html"
++	xmlns:ui="http://java.sun.com/jsf/facelets"
++	template="/template/template.xhtml">
++
++	<ui:param name="page_name" value="Accueil" />
++
++	<ui:define name="content">
++
++		<h:panelGroup>
++			<h:form>
++				<h:outputText
++					value="Bonjour #{employeController.authenticatedUser.prenom} #{employeController.authenticatedUser.nom}" /> 
++				| 
++				<h:commandLink value="Déconnexion"
++					action="#{employeController.doLogout()}" />
++			</h:form>
++		</h:panelGroup>
++
++
++		<br />
++
++		<h:panelGroup columns="2">
++			<h:form>
++				<table>
++					<tr>
++						<td><h:outputText value="Login (Email)"></h:outputText></td>
++						<td>
++<h:inputText id="validateMail" required="true" validatorMessage="Le format du mail est invalide!" requiredMessage="Mail obligatoire!" value="#{employeController.email}">
++<f:validateRegex pattern=".+\@.+\..+" /> 
++</h:inputText> 
++<h:message for="validateMail" />
++								
++								</td>
++					</tr>
++					<tr>
++						<td><h:outputText value="Mot de Passe"></h:outputText></td>
++						<td><h:inputSecret value="#{employeController.password}"></h:inputSecret></td>
++					</tr>
++					<tr>
++						<td><h:outputText value="Nom"></h:outputText></td>
++						<td><h:inputText value="#{employeController.nom}"></h:inputText></td>
++					</tr>
++					<tr>
++						<td><h:outputText value="Prenom"></h:outputText></td>
++						<td><h:inputText value="#{employeController.prenom}"></h:inputText></td>
++					</tr>
++					<tr>
++						<td><h:outputText value="Actif / Inactif"></h:outputText></td>
++						<td><h:selectBooleanCheckbox
++								value="#{employeController.actif}"></h:selectBooleanCheckbox></td>
++					</tr>
++
++					<tr>
++						<td><h:outputText value="Role"></h:outputText></td>
++						<td><h:selectOneMenu value="#{employeController.role}">
++								<f:selectItem itemLabel="Choisir le Role" itemValue="#{null}" />
++								<f:selectItems value="#{employeController.roles}" />
++							</h:selectOneMenu></td>
++					</tr>
++
++					<tr>
++						<td colspan="2"><h:commandButton value="Ajouter Employé"
++								action="#{employeController.addEmploye()}" /> <h:commandButton
++								value="Mettre A jour Employé"
++								action="#{employeController.updateEmploye()}" /></td>
++					</tr>
++
++				</table>
++			</h:form>
++		</h:panelGroup>
++		<!-- BEGIN : TP2 JSF CRUD Ajout Employé -->
++
++
++		<!-- BEGIN : TP3 JSF List Employes -->
++		<br />
++		<h:panelGroup columns="2">
++			<h:form>
++				<h:dataTable value="#{employeController.employes}" var="employe"
++					border="1">
++					<h:column>
++						<f:facet name="header">
++							<h:outputText value="Login" />
++						</f:facet>
++						<h:outputText value="#{employe.email}" />
++					</h:column>
++					<h:column>
++						<f:facet name="header">
++							<h:outputText value="Prenom" />
++						</f:facet>
++						<h:outputText value="#{employe.prenom}" />
++					</h:column>
++					<h:column>
++						<f:facet name="header">
++							<h:outputText value="Nom" />
++						</f:facet>
++						<h:outputText value="#{employe.nom}" />
++					</h:column>
++					<h:column>
++						<f:facet name="header">
++							<h:outputText value="Role" />
++						</f:facet>
++						<h:outputText value="#{employe.role}" />
++					</h:column>
++					<h:column>
++						<f:facet name="header">
++							<h:outputText value="Actif" />
++						</f:facet>
++						<h:outputText value="#{employe.actif == true ? 'Oui' : 'Non'}" />
++					</h:column>
++
++					<!-- BEGIN :  TP4 JSF Supprimer Employé -->
++					<!-- BEGIN :  TP4 JSF Modifier Employé -->
++					<h:column>
++						<f:facet name="header">
++							<h:outputText value="Action" />
++						</f:facet>
++						<h:commandButton
++							action="#{employeController.removeEmploye(employe.id)}"
++							value="Supprimer" />
++						<h:commandButton
++							action="#{employeController.displayEmploye(employe)}"
++							value="Afficher" />
++					</h:column>
++					<!-- END :  TP4 JSF Supprimer Employé -->
++					<!-- END :  TP4 JSF Modifer Employé -->
++
++				</h:dataTable>
++			</h:form>
++		</h:panelGroup>
++		<!-- END :  TP3 JSF List Employes -->
++
++	</ui:define>
++
++</ui:composition>
+\ No newline at end of file
+diff --git a/bin/src/main/webapp/template/footer.xhtml b/bin/src/main/webapp/template/footer.xhtml
+new file mode 100644
+index 0000000..2733bbd
+--- /dev/null
++++ b/bin/src/main/webapp/template/footer.xhtml
+@@ -0,0 +1,10 @@
++<ui:composition xmlns="http://www.w3.org/1999/xhtml"
++	xmlns:f="http://java.sun.com/jsf/core"
++	xmlns:h="http://java.sun.com/jsf/html"
++	xmlns:ui="http://java.sun.com/jsf/facelets">
++
++		<h:panelGroup>
++			<br /> Mettez ici un pied de page ! <br /><br />  
++		</h:panelGroup>
++  
++</ui:composition>
+\ No newline at end of file
+diff --git a/bin/src/main/webapp/template/header.xhtml b/bin/src/main/webapp/template/header.xhtml
+new file mode 100644
+index 0000000..2058701
+--- /dev/null
++++ b/bin/src/main/webapp/template/header.xhtml
+@@ -0,0 +1,10 @@
++<ui:composition xmlns="http://www.w3.org/1999/xhtml"
++	xmlns:f="http://java.sun.com/jsf/core"
++	xmlns:h="http://java.sun.com/jsf/html"
++	xmlns:ui="http://java.sun.com/jsf/facelets">
++
++		<h:panelGroup>
++			<br /><br /> Mettez ici un en-tête ! <br /><br />
++		</h:panelGroup>
++
++</ui:composition>
+\ No newline at end of file
+diff --git a/bin/src/main/webapp/template/template.xhtml b/bin/src/main/webapp/template/template.xhtml
+new file mode 100644
+index 0000000..ff604b7
+--- /dev/null
++++ b/bin/src/main/webapp/template/template.xhtml
+@@ -0,0 +1,19 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
++   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
++<html xmlns="http://www.w3.org/1999/xhtml"
++	xmlns:h="http://java.sun.com/jsf/html"
++	xmlns:f="http://java.sun.com/jsf/core"
++	xmlns:ui="http://java.sun.com/jsf/facelets">
++<h:head>
++<title>#{page_name}</title>
++</h:head>
++<h:body>
++	<ui:include src="/template/header.xhtml" />
++	
++	<ui:insert name="menu" /> 
++	<ui:insert name="content" />
++	
++	<ui:include src="/template/footer.xhtml" />
++</h:body>
++</html>
+diff --git a/bin/src/test/java/tn/esprit/spring/TimesheetApplicationTests.class b/bin/src/test/java/tn/esprit/spring/TimesheetApplicationTests.class
+new file mode 100644
+index 0000000..11abb28
+Binary files /dev/null and b/bin/src/test/java/tn/esprit/spring/TimesheetApplicationTests.class differ
+diff --git a/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF b/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
+index 6bb6652..3bcde68 100644
+>>>>>>> 7f429bd... Wiem Test JUnit
 --- a/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
 +++ b/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
 @@ -1,9 +1,9 @@
@@ -7,7 +1382,11 @@ index 6bb6652..ebea5ce 100644
  Implementation-Title: timesheet
  Implementation-Version: 1.0
 -Built-By: MANEL
+<<<<<<< HEAD
 +Built-By: Yasmine
+=======
++Built-By: WIEM
+>>>>>>> 7f429bd... Wiem Test JUnit
  Implementation-Vendor-Id: tn.esprit.spring
 -Build-Jdk: 1.8.0_60
 +Build-Jdk: 1.8.0_201
@@ -15,17 +1394,29 @@ index 6bb6652..ebea5ce 100644
   ot-starter-parent/timesheet
  Created-By: Maven Integration for Eclipse
 diff --git a/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties b/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
+<<<<<<< HEAD
 index cd5742d..c91dbc5 100644
+=======
+index cd5742d..fe66a99 100644
+>>>>>>> 7f429bd... Wiem Test JUnit
 --- a/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
 +++ b/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
 @@ -1,7 +1,7 @@
  #Generated by Maven Integration for Eclipse
 -#Sat Oct 17 18:04:31 WAT 2020
+<<<<<<< HEAD
 +#Sat Oct 17 19:46:37 CEST 2020
+=======
++#Sat Oct 17 18:56:41 WAT 2020
+>>>>>>> 7f429bd... Wiem Test JUnit
  version=1.0
  groupId=tn.esprit.spring
 -m2e.projectName=timesheet
 -m2e.projectLocation=C\:\\Work\\timesheet
 +m2e.projectName=Projet_IC
+<<<<<<< HEAD
 +m2e.projectLocation=C\:\\Users\\Yasmine\\Documents\\workspace-sts-3.8.4.RELEASE\\Projet_IC
+=======
++m2e.projectLocation=C\:\\Users\\21698\\Documents\\workspace-sts-3.8.4.RELEASE\\Projet_IC
+>>>>>>> 7f429bd... Wiem Test JUnit
  artifactId=timesheet
diff --git a/src/main/java/tn/esprit/spring/entities/Employe.java b/src/main/java/tn/esprit/spring/entities/Employe.java
index bdb3b9e..d5aa6aa 100644
--- a/src/main/java/tn/esprit/spring/entities/Employe.java
+++ b/src/main/java/tn/esprit/spring/entities/Employe.java
@@ -1,6 +1,7 @@
 package tn.esprit.spring.entities;
 
 import java.io.Serializable;
+
 import java.util.List;
 
 import javax.persistence.Entity;
@@ -95,10 +96,12 @@ public class Employe implements Serializable {
 		this.role = role;
 	}
 	
+	
 	public int getId() {
 		return id;
 	}
 
+
 	public void setId(int id) {
 		this.id = id;
 	}
diff --git a/src/main/java/tn/esprit/spring/serviceTest/EmployesServiceTest.java b/src/main/java/tn/esprit/spring/serviceTest/EmployesServiceTest.java
index 1a6b74f..f341cff 100644
--- a/src/main/java/tn/esprit/spring/serviceTest/EmployesServiceTest.java
+++ b/src/main/java/tn/esprit/spring/serviceTest/EmployesServiceTest.java
@@ -1,5 +1,69 @@
 package tn.esprit.spring.serviceTest;
 
+
+import static org.junit.Assert.assertEquals;
+
+
+import java.text.ParseException;
+import java.util.List;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.test.context.junit4.SpringRunner;
+
+import tn.esprit.spring.entities.Employe;
+import tn.esprit.spring.entities.Role;
+import tn.esprit.spring.services.IEmployeService;
+
+@RunWith(SpringRunner.class)
+@SpringBootTest
 public class EmployesServiceTest {
 
+	@Autowired 
+	IEmployeService es; 
+
+/*Ajout*/
+	@Test
+	public void testAddEmploye() throws ParseException {
+		
+		Employe e = new Employe(0, "Wiem", "Taleb", null, null, false, Role.CHEF_DEPARTEMENT); 
+		Employe emplyeAdded = es.addOrUpdateEmploye(e);
+		assertEquals(e.getNom(), emplyeAdded.getNom());
+	}
+
+/*affichage*/
+	@Test       
+	public void testRetrieveAllEmployes() {
+		List<Employe> listEmployes = es.getAllEmployes(); 
+		// if there are 3 employes in DB : 
+		assertEquals(4, listEmployes.size());
+	}
+	
+	
+	 /*update*/
+@Test      
+	public void testModifyUser() throws ParseException   {
+		Employe e = new Employe(2, "Mayssa", "Mayssa", null, null, false, Role.ADMINISTRATEUR); 
+		Employe employeUpdated  = es.mettreAjourEmploye(e); 
+		assertEquals(e.getNom(), employeUpdated.getNom());
+	}
+       
+       /*delete*/
+	@Test     
+	public void deleteEmployeId() {
+		Employe employeDeleted= es.deleteEmployeById( 3);; 
+		assertEquals(3, employeDeleted.getId());
+	}
+
+
 }
+
+
+
+
+
+
+
+
diff --git a/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.java b/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.java
index 494e98d..190bdc4 100644
--- a/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.java
+++ b/src/main/java/tn/esprit/spring/services/EmployeServiceImpl.java
@@ -37,9 +37,9 @@ public class EmployeServiceImpl implements IEmployeService {
 	}
 
 	@Override
-	public int addOrUpdateEmploye(Employe employe) {
+	public Employe addOrUpdateEmploye(Employe employe) {
 		employeRepository.save(employe);
-		return employe.getId();
+		return employe;
 	}
 
 
@@ -104,7 +104,7 @@ public class EmployeServiceImpl implements IEmployeService {
 		return employeManagedEntity.getPrenom();
 	}
 	 
-	public void deleteEmployeById(int employeId)
+	public Employe deleteEmployeById(int employeId)
 	{
 		Employe employe = employeRepository.findById(employeId).get();
 
@@ -116,6 +116,7 @@ public class EmployeServiceImpl implements IEmployeService {
 		}
 
 		employeRepository.delete(employe);
+		return employe;
 	}
 
 	public void deleteContratById(int contratId) {
@@ -162,4 +163,10 @@ public class EmployeServiceImpl implements IEmployeService {
 		return (List<Employe>) employeRepository.findAll();
 	}
 
+	@Override
+	public Employe mettreAjourEmploye(Employe employe) {
+		// TODO Auto-generated method stub
+		return employeRepository.save(employe) ;
+	}
+
 }
diff --git a/src/main/java/tn/esprit/spring/services/IEmployeService.java b/src/main/java/tn/esprit/spring/services/IEmployeService.java
index 185ba75..27884f0 100644
--- a/src/main/java/tn/esprit/spring/services/IEmployeService.java
+++ b/src/main/java/tn/esprit/spring/services/IEmployeService.java
@@ -21,7 +21,8 @@ public interface IEmployeService {
 	public int ajouterContrat(Contrat contrat);
 	public void affecterContratAEmploye(int contratId, int employeId);
 	public String getEmployePrenomById(int employeId);
-	public void deleteEmployeById(int employeId);
+	public Employe deleteEmployeById(int employeId);
+	
 	public void deleteContratById(int contratId);
 	public int getNombreEmployeJPQL();
 	public List<String> getAllEmployeNamesJPQL();
@@ -34,8 +35,13 @@ public interface IEmployeService {
 	public List<Timesheet> getTimesheetsByMissionAndDate(Employe employe, Mission mission, 
 	Date dateDebut, Date dateFin);
 
-	int addOrUpdateEmploye(Employe employe);
-	
+	public Employe addOrUpdateEmploye(Employe employe);
+
+
+	public Employe mettreAjourEmploye(Employe employe);
+
+
+
 	
 	
 
diff --git a/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF b/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
index ebea5ce..3bcde68 100644
--- a/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
+++ b/src/main/webapp/WEB-INF/classes/META-INF/MANIFEST.MF
@@ -1,7 +1,7 @@
 Manifest-Version: 1.0
 Implementation-Title: timesheet
 Implementation-Version: 1.0
-Built-By: Yasmine
+Built-By: WIEM
 Implementation-Vendor-Id: tn.esprit.spring
 Build-Jdk: 1.8.0_201
 Implementation-URL: https://projects.spring.io/spring-boot/#/spring-bo
diff --git a/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties b/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
index 87238b8..bc61ebe 100644
--- a/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
+++ b/src/main/webapp/WEB-INF/classes/META-INF/maven/tn.esprit.spring/timesheet/pom.properties
@@ -1,6 +1,7 @@
 #Generated by Maven Integration for Eclipse
 <<<<<<< HEAD
 <<<<<<< HEAD
+<<<<<<< HEAD
 #Mon Oct 19 18:55:23 CEST 2020
 =======
 #Sun Oct 18 12:48:49 WAT 2020
@@ -12,4 +13,11 @@ version=1.0
 groupId=tn.esprit.spring
 m2e.projectName=Projet_IC
 m2e.projectLocation=C\:\\Users\\Yasmine\\Documents\\workspace-sts-3.8.4.RELEASE\\Projet_IC
+=======
+#Mon Oct 19 18:30:46 WAT 2020
+version=1.0
+groupId=tn.esprit.spring
+m2e.projectName=Projet_IC
+m2e.projectLocation=C\:\\Users\\21698\\Documents\\workspace-sts-3.8.4.RELEASE\\Projet_IC
+>>>>>>> 7f429bd... Wiem Test JUnit
 artifactId=timesheet
diff --git a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/controller/ControllerEmployeImpl.class b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/controller/ControllerEmployeImpl.class
index e8be907..e45d542 100644
Binary files a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/controller/ControllerEmployeImpl.class and b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/controller/ControllerEmployeImpl.class differ
diff --git a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/controller/RestControlEmploye.class b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/controller/RestControlEmploye.class
index 6b3ed1c..7e707b6 100644
Binary files a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/controller/RestControlEmploye.class and b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/controller/RestControlEmploye.class differ
diff --git a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/entities/Employe.class b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/entities/Employe.class
index 01fc648..184e0dc 100644
Binary files a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/entities/Employe.class and b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/entities/Employe.class differ
diff --git a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/serviceTest/EmployesServiceTest.class b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/serviceTest/EmployesServiceTest.class
index b4b8df4..522a737 100644
Binary files a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/serviceTest/EmployesServiceTest.class and b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/serviceTest/EmployesServiceTest.class differ
diff --git a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/services/EmployeServiceImpl.class b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/services/EmployeServiceImpl.class
index 7037d3b..9a22353 100644
Binary files a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/services/EmployeServiceImpl.class and b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/services/EmployeServiceImpl.class differ
diff --git a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/services/IEmployeService.class b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/services/IEmployeService.class
index 5a8de66..3335001 100644
Binary files a/src/main/webapp/WEB-INF/classes/tn/esprit/spring/services/IEmployeService.class and b/src/main/webapp/WEB-INF/classes/tn/esprit/spring/services/IEmployeService.class differ
>>>>>>> branch 'main' of https://github.com/Manel96/Projet_IC.git
